#version: '3'

services:
    web1:
        container_name: "sugar-web1"
        image: sugar_php80_web
        build: ../../images/php/80/apache
        ports:
            - "8080:80"
        extra_hosts:
            - "docker.local:127.0.0.1"
        environment:
            - "APACHE_RUN_USER=sugar"
            - "APACHE_RUN_GROUP=sugar"
        volumes:
            - ../../data/app:/var/www/html
            - ../../images/php/80/apache/config/php/docker.ini:/usr/local/etc/php/conf.d/docker.ini
        depends_on:
            - mysql
            - elasticsearch
            - redis
            - permissions
        links:
            - mysql
            - elasticsearch
            - redis
        networks:
            - laravel-development       
    cron:
        container_name: "sugar-cron"
        image: sugar_php80_cron
        build: ../../images/php/80/cron
        volumes:
            - ../../data/app:/var/www/html
            - ../../images/php/80/cron/config/php/docker.ini:/usr/local/etc/php/conf.d/docker.ini
        depends_on:
            - mysql
            - elasticsearch
            - redis
            - permissions
        links:
            - mysql
            - elasticsearch
            - redis
        networks:
            - laravel-development    
    mysql:
        container_name: "sugar-mysql"
        image: sugar_mysql
        build: ../../images/mysql/80
        ports:
            - "3336:3306"
        volumes:
            - ../../data/mysql/80:/var/lib/mysql
        environment:
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_USER=sugar
            - MYSQL_PASSWORD=sugar
        networks:
            - laravel-development       
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
        container_name: "sugar-elasticsearch"
        ports:
            - 9200:9200
            - 9300:9300
        volumes:
            - es-data01:/usr/share/elasticsearch/data
        environment:
            - node.name=sugar1
            - cluster.name=sugarcrm12
            - discovery.type=single-node
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
            nofile:
                soft: 65536
                hard: 65536
        networks:
            - laravel-development           
    redis:
        container_name: "sugar-redis"
        image: redis:latest
        volumes:
            - ../../data/redis:/data
        networks:
            - laravel-development   
    permissions:
        container_name: "sugar-permissions"
        image: sugar_permissions
        build: ../../images/permissions
        volumes:
            - ../../data/app:/var/www/html
        networks:
            - laravel-development    
    testsmtp:
        container_name: "sugar-smtp"
        image: sugar_testsmtp
        build: ../../images/testsmtp
        networks:
            - laravel-development
    # SSL/TLS    
    secureserver:
        image: 'docker.io/jc21/nginx-proxy-manager:latest'
        restart: unless-stopped
        ports:
            - '80:80'
            - '81:81'
            - '443:443'
        volumes:
            - ../../data/secureserver/data:/data
            - ../../data/secureserver/letsencrypt:/etc/letsencrypt    
        depends_on:
            - web1
            - web-sugarapi
        networks:
            - laravel-development
    # Laravel
    # Basado en: https://docs.docker.com/guides/frameworks/laravel/
    web-sugarapi:
        image: nginx:latest # Using the default Nginx image with custom configuration.
        volumes:
        # Mount the application code for live updates
            - ../../data/app/laravel/sugarAPI:/var/www
        # Mount the Nginx configuration file
            - ../../images/php/83/laravel/development/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        ports:
        # Map port 80 inside the container to the port specified by 'NGINX_PORT' on the host machine
            - "8081:80"
        environment:
            - NGINX_HOST=localhost
        networks:
            - laravel-development
        depends_on:
            php-fpm-sugarapi:
                condition: service_started  # Wait for php-fpm to start

    php-fpm-sugarapi:
        # For the php-fpm service, we will create a custom image to install the necessary PHP extensions and setup proper permissions.
        build:
            context: "../../"
            dockerfile: images/php/83/laravel/common/php-fpm/Dockerfile
            target: development
            args:
                UID: ${UID:-1000}
                GID: ${GID:-1000}
                XDEBUG_ENABLED: ${XDEBUG_ENABLED:-true}
                XDEBUG_MODE: develop,coverage,debug,profile
                XDEBUG_HOST: ${XDEBUG_HOST:-host.docker.internal}
                XDEBUG_IDE_KEY: ${XDEBUG_IDE_KEY:-DOCKER}
                XDEBUG_LOG: /dev/stdout
                XDEBUG_LOG_LEVEL: 0
        env_file:
            # Load the environment variables from the Laravel application
            - ../../data/app/laravel/sugarAPI/.env
        user: "${UID:-1000}:${GID:-1000}"
        volumes:
            # Mount the application code for live updates
            - ../../data/app/laravel/sugarAPI:/var/www
        networks:
            - laravel-development
        depends_on:
            mysql:
                condition: service_started  # Wait for postgres to start

    workspace-sugarapi:
    # For the workspace service, we will also create a custom image to install and setup all the necessary stuff.
        build:
            context: .
            dockerfile: ../../images/php/83/laravel/development/workspace/Dockerfile
            args:
                UID: ${UID:-1000}
                GID: ${GID:-1000}
                XDEBUG_ENABLED: ${XDEBUG_ENABLED:-true}
                XDEBUG_MODE: develop,coverage,debug,profile
                XDEBUG_HOST: ${XDEBUG_HOST:-host.docker.internal}
                XDEBUG_IDE_KEY: ${XDEBUG_IDE_KEY:-DOCKER}
                XDEBUG_LOG: /dev/stdout
                XDEBUG_LOG_LEVEL: 0
        tty: true  # Enables an interactive terminal
        stdin_open: true  # Keeps standard input open for 'docker exec'
        env_file:
            - ../../data/app/laravel/sugarAPI/.env
        volumes:
            - ../../data/app/laravel/sugarAPI/:/var/www
        networks:
            - laravel-development

networks:
  laravel-development:


volumes:
    es-data01:
        driver: local
